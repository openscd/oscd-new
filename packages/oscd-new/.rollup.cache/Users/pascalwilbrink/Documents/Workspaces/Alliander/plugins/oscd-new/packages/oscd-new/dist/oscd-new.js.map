{"version":3,"file":"oscd-new.js","sourceRoot":"","sources":["../src/oscd-new.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAC3C,OAAO,EAAE,IAAI,EAAE,UAAU,EAAkB,MAAM,KAAK,CAAC;AAEvD,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AAItD,OAAO,sBAAsB,CAAC;AAC9B,OAAO,yBAAyB,CAAC;AAEjC,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AAExD,OAAO,oBAAoB,CAAC;AAC5B,OAAO,wCAAwC,CAAC;AAEhD,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAE1C,OAAO,EAAE,GAAG,EAAE,MAAM,mBAAmB,CAAC;AAExC,MAAM,CAAC,OAAO,OAAO,OAAQ,SAAQ,UAAU;IAa7C;QACE,KAAK,EAAE,CAAC;QAHV,UAAK,GAAG,KAAK,CAAC;IAId,CAAC;IAED,KAAK,CAAC,GAAG;;QACP,MAAA,IAAI,CAAC,MAAM,0CAAE,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;;;iBAKE,IAAI,CAAC,QAAQ;;wCAEU,IAAI,CAAC,QAAQ;;;;;;;;;;;;iBAYpC,IAAI,CAAC,MAAM;;oBAER,CAAC,IAAI,CAAC,KAAK;;;;;iBAKd,IAAI,CAAC,QAAQ;;;;;;mBAMX,CAAC;IAClB,CAAC;IAED,IAAI,IAAI;;QACN,OAAO,CAAA,MAAA,IAAI,CAAC,SAAS,0CAAE,KAAK,KAAI,EAAE,CAAC;IACrC,CAAC;IAED,IAAI,eAAe;;QACjB,MAAM,YAAY,GAChB,CAAc,MAAA,IAAI,CAAC,WAAW,0CAAE,QAAQ,KAAI,SAAS,CAAC;QAExD,OAAO,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAA6B,CAAC;IACrD,CAAC;IAES,QAAQ;QAChB,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,eAAe,EAAE;YAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;IACH,CAAC;IAES,MAAM;;QACd,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YAC3C,CAAC,CAAC,IAAI,CAAC,IAAI;YACX,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,MAAM,CAAC;QAEvB,IAAI,CAAC,aAAa,CAChB,YAAY,CACV,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,eAAgB,CAAC,EAC5D,OAAO,CACR,CACF,CAAC;QACF,MAAA,IAAI,CAAC,MAAM,0CAAE,IAAI,EAAE,CAAC;IACtB,CAAC;IAES,QAAQ;;QAChB,MAAA,IAAI,CAAC,MAAM,0CAAE,IAAI,EAAE,CAAC;IACtB,CAAC;CACF;AA3FC;IADC,KAAK,CAAC,aAAa,CAAC;8BACZ,UAAU;uCAAC;AAGpB;IADC,KAAK,CAAC,gBAAgB,CAAC;8BACZ,aAAa;0CAAC;AAG1B;IADC,KAAK,CAAC,UAAU,CAAC;8BACJ,IAAI;4CAAC;AAGnB;IADC,KAAK,EAAE;;sCACM","sourcesContent":["import { query, state } from \"lit-element\";\nimport { html, LitElement, TemplateResult } from \"lit\";\n\nimport { newOpenEvent } from \"@openscd/open-scd-core\";\n\nimport { MenuPlugin } from \"@openscd/oscd-plugin-core\";\n\nimport \"@openscd/oscd-dialog\";\nimport \"@openscd/oscd-textfield\";\n\nimport { OscdDialog } from \"@openscd/oscd-dialog\";\nimport { OscdTextfield } from \"@openscd/oscd-textfield\";\n\nimport \"@material/mwc-list\";\nimport \"@material/mwc-list/mwc-radio-list-item\";\n\nimport { List } from \"@material/mwc-list\";\nimport { ListItemBase } from \"@material/mwc-list/mwc-list-item-base\";\nimport { Scl } from \"@openscd/oscd-scl\";\n\nexport default class OscdNew extends LitElement implements MenuPlugin {\n  @query(\"oscd-dialog\")\n  dialog?: OscdDialog;\n\n  @query(\"oscd-textfield\")\n  textfield?: OscdTextfield;\n\n  @query(\"mwc-list\")\n  versionList?: List;\n\n  @state()\n  valid = false;\n\n  constructor() {\n    super();\n  }\n\n  async run(): Promise<void> {\n    this.dialog?.show();\n  }\n\n  render(): TemplateResult {\n    return html`<oscd-dialog>\n      <oscd-textfield\n        label=\"Name\"\n        value=\"project.scd\"\n        required\n        @input=${this.onChange}\n      ></oscd-textfield>\n      <mwc-list activatable @selected=${this.onChange}>\n        <mwc-radio-list-item left value=\"2003\"\n          >Edition 1 (Schema 1.7)</mwc-radio-list-item\n        >\n        <mwc-radio-list-item left value=\"2007B\"\n          >Edition 2 (Schema 3.1)</mwc-radio-list-item\n        >\n        <mwc-radio-list-item left selected value=\"2007B4\"\n          >Edition 2.1 (2007B4)</mwc-radio-list-item\n        >\n      </mwc-list>\n      <mwc-button\n        @click=${this.onSave}\n        slot=\"primaryAction\"\n        ?disabled=${!this.valid}\n        icon=\"create_new_folder\"\n        >Create</mwc-button\n      >\n      <mwc-button\n        @click=${this.onCancel}\n        slot=\"secondaryAction\"\n        style=\"--mdc-theme-primary: var(--mdc-theme-error)\"\n      >\n        Cancel</mwc-button\n      >\n    </oscd-dialog>`;\n  }\n\n  get name(): string {\n    return this.textfield?.value || \"\";\n  }\n\n  get selectedVersion(): Scl.SupportedVersion | undefined {\n    const selectedItem: ListItemBase | undefined =\n      <ListItemBase>this.versionList?.selected || undefined;\n\n    return selectedItem?.value as Scl.SupportedVersion;\n  }\n\n  protected onChange() {\n    if (this.name.length > 0 && this.selectedVersion) {\n      this.valid = true;\n    } else {\n      this.valid = false;\n    }\n  }\n\n  protected onSave() {\n    const docName = this.name.match(/\\.s[sc]d$/i)\n      ? this.name\n      : `${this.name}.scd`;\n\n    this.dispatchEvent(\n      newOpenEvent(\n        Scl.newEmptySCD(docName.slice(0, -4), this.selectedVersion!),\n        docName\n      )\n    );\n    this.dialog?.hide();\n  }\n\n  protected onCancel() {\n    this.dialog?.hide();\n  }\n}\n"]}